buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
plugins {
    id "org.sonarqube" version "3.1.1"
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = "${version}"
group = 'cy.jdkdigital.fireproofboats' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'fireproofboats'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.
compileJava {
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
}
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=fireproofboats.mixin.json"
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                fireproofboats {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg "-mixin.config=fireproofboats.mixin.json"
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                fireproofboats {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'fireproofboats', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                fireproofboats {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
// sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${forgeversion}"
    annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'

    implementation fg.deobf("curse.maven:jumpy-boats-542110:3512542")
}

mixin {
    add sourceSets.main, "fireproofboats.refmap.json"
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": "Fireproof Boats",
                "Specification-Vendor": "fireproofboats",
                "Specification-Version": "1.0", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"JDK Digital",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder": 0,
                "MixinConfigs" : "fireproofboats.mixin.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}